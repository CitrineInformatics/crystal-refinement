################
# SHELX Config #
################
# Path to the SHELX xl executable
path_to_xl: path/to/xl.exe
# Path to the SHELX xs executable
path_to_xs: path/to/xs.exe
# Whether to use wine to execute the SHELX executables (if you need to run .exe files on a MacOS)
use_wine: false

####################
# Optimizer Config #
####################
# Threshold to denote a high r1 score, which triggers an alternate path in the optimizer where bond lengths drive the
# assignment of sites instead of r1 score.
r1_threshold: 0.1
# Difference threshold for r1 scores to allow for branching
r1_similarity_threshold: 0.0075
# Ratio threshold for overall score similarity to allow for branching
overall_score_ratio_threshold: 1.3
# Minimum deviation in occupancy or site mixing to allow partial occupancy
occupancy_threshold: 0.02
# Maximum number of optimization paths to follow at any given optimization step. A higher value may give a more
# optimal path, but will be more computationally expensive.
max_n_leaves: 50

######################
# Bond Length Config #
######################
# A list of prescribed ideal bond lengths in Angstroms. If a bond length is not specified, then it is calculated via
# either a machine learning model or based on the atomic radii.
bond_lengths: [("Ge", "Mn", 2.5)]
# Whether to use the bond length machine learning model to estimate bond lengths.
use_ml_model: false
# API key in order to use the Citrination bond length model. This can be found at https://citrination.com/users/edit
citrination_api_key: YOUR_CITRINATION_API_KEY

#######################
# Mixing Pairs Config #
#######################
# A list of acceptable elements to allow to co-occupy a site. If no such list is provided, then acceptable mixing pairs
# are determined based on pymatgen information.
mixing_pairs: "[('Au', 'Os')]"

################
# Score Config #
################
# Weighting of R1 score versus bond length score when calculating the overall score. A value of 1.0 corresponds to R1
# only. This must be a double in range (0.0, 1.0)).
score_weighting: 0.5
# Whether to penalize the score a result if any elements identified in the initial .ins file are not present.
ensure_identified_elements: True

##################
# Logging Config #
##################
# Number of final .res files to save
n_results: 10
# Whether to suppress the output of the SHELXTL commands
suppress_output: True
# Whether to print the logs during the optimization process
log_output: False

